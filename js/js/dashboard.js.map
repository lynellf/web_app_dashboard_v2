{"version":3,"sources":["rounded-bar.js","traffic-data.js","canvas-selectors.js","users.js","toggle-charts.js","close-modal.js","message-user.js","notifications.js","settings-config.js"],"names":[],"mappingsxtNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../dashboard.js","sourcesContent":["// draws a rectangle with a rounded top\nChart.helpers.drawRoundedTopRectangle = function(\n    ctx,\n    x,\n    y,\n    width,\n    height,\n    radius\n) {\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    // top right corner\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    // bottom right\tcorner\n    ctx.lineTo(x + width, y + height);\n    // bottom left corner\n    ctx.lineTo(x, y + height);\n    // top left\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n};\n\nChart.elements.RoundedTopRectangle = Chart.elements.Rectangle.extend({\n    draw: function() {\n        var ctx = this._chart.ctx;\n        var vm = this._view;\n        var left, right, top, bottom, signX, signY, borderSkipped;\n        var borderWidth = vm.borderWidth;\n\n        if (!vm.horizontal) {\n            // bar\n            left = vm.x - vm.width / 2;\n            right = vm.x + vm.width / 2;\n            top = vm.y;\n            bottom = vm.base;\n            signX = 1;\n            signY = bottom > top ? 1 : -1;\n            borderSkipped = vm.borderSkipped || 'bottom';\n        } else {\n            // horizontal bar\n            left = vm.base;\n            right = vm.x;\n            top = vm.y - vm.height / 2;\n            bottom = vm.y + vm.height / 2;\n            signX = right > left ? 1 : -1;\n            signY = 1;\n            borderSkipped = vm.borderSkipped || 'left';\n        }\n\n        // Canvas doesn't allow us to stroke inside the width so we can\n        // adjust the sizes to fit if we're setting a stroke on the line\n        if (borderWidth) {\n            // borderWidth shold be less than bar width and bar height.\n            var barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n            borderWidth = borderWidth > barSize ? barSize : borderWidth;\n            var halfStroke = borderWidth / 2;\n            // Adjust borderWidth when bar top position is near vm.base(zero).\n            var borderLeft =\n        left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n            var borderRight =\n        right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n            var borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n            var borderBottom =\n        bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n            // not become a vertical line?\n            if (borderLeft !== borderRight) {\n                top = borderTop;\n                bottom = borderBottom;\n            }\n            // not become a horizontal line?\n            if (borderTop !== borderBottom) {\n                left = borderLeft;\n                right = borderRight;\n            }\n        }\n\n        // calculate the bar width and roundess\n        var barWidth = Math.abs(left - right);\n        var roundness = this._chart.config.options.barRoundness || 0.5;\n        var radius = barWidth * roundness * 0.5;\n\n        // keep track of the original top of the bar\n        var prevTop = top;\n\n        // move the top down so there is room to draw the rounded top\n        top = prevTop + radius;\n        var barRadius = top - prevTop;\n\n        ctx.beginPath();\n        ctx.fillStyle = vm.backgroundColor;\n        ctx.strokeStyle = vm.borderColor;\n        ctx.lineWidth = borderWidth;\n\n        // draw the rounded top rectangle\n        Chart.helpers.drawRoundedTopRectangle(\n            ctx,\n            left,\n            top - barRadius + 1,\n            barWidth,\n            bottom - prevTop,\n            barRadius\n        );\n\n        ctx.fill();\n        if (borderWidth) {\n            ctx.stroke();\n        }\n\n        // restore the original top value so tooltips and scales still work\n        top = prevTop;\n    },\n});\n\nChart.defaults.roundedBar = Chart.helpers.clone(Chart.defaults.bar);\n\nChart.controllers.roundedBar = Chart.controllers.bar.extend({\n    dataElementType: Chart.elements.RoundedTopRectangle,\n});\n","var weeklyData = {\n        type: 'line',\n        data: {\n            labels: [\n                '16-22',\n                '23-29',\n                '30-5',\n                '6-12',\n                '13-19',\n                '20-26',\n                '27-3',\n                '4-10',\n                '11-17',\n                '18-24',\n                '25-31',\n            ],\n            datasets: [\n                {\n                    data: [\n                        800,\n                        1300,\n                        1050,\n                        1500,\n                        2000,\n                        1450,\n                        1800,\n                        1300,\n                        1600,\n                        2300,\n                        2000,\n                        2300,\n                        2450,\n                    ],\n                    borderColor: '#7477BF',\n                    backgroundColor: 'rgba(212, 214, 231, 0.46)',\n                    fill: true,\n                    lineTension: 0,\n                    pointRadius: 8,\n                    pointBackgroundColor: 'white',\n                },\n            ],\n        },\n        options: {\n            legend: {\n                display: false,\n            },\n            responsive: true,\n        },\n    },\n    hourlyData = {\n        type: 'line',\n        data: {\n            labels: [\n                '1-3',\n                '4-6',\n                '7-9',\n                '10-12',\n                '13-15',\n                '16-18',\n                '19-21',\n                '22-24',\n            ],\n            datasets: [\n                {\n                    data: [\n                        800,\n                        1300,\n                        1050,\n                        1500,\n                        2000,\n                        1450,\n                        1800,\n                        1300,\n                        1600,\n                        2300,\n                        2000,\n                        2300,\n                        2450,\n                    ],\n                    borderColor: '#7477BF',\n                    backgroundColor: 'rgba(212, 214, 231, 0.46)',\n                    fill: true,\n                    lineTension: 0,\n                    pointRadius: 8,\n                    pointBackgroundColor: 'white',\n                },\n            ],\n        },\n        options: {\n            legend: {\n                display: false,\n            },\n            responsive: true,\n        },\n    },\n    dailyData = {\n        type: 'line',\n        data: {\n            labels: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n            datasets: [\n                {\n                    data: [\n                        800,\n                        1300,\n                        1050,\n                        1500,\n                        2000,\n                        1450,\n                        1800,\n                        1300,\n                        1600,\n                        2300,\n                        2000,\n                        2300,\n                        2450,\n                    ],\n                    borderColor: '#7477BF',\n                    backgroundColor: 'rgba(212, 214, 231, 0.46)',\n                    fill: true,\n                    lineTension: 0,\n                    pointRadius: 8,\n                    pointBackgroundColor: 'white',\n                },\n            ],\n        },\n        options: {\n            legend: {\n                display: false,\n            },\n            responsive: true,\n        },\n    },\n    monthlyData = {\n        type: 'line',\n        data: {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            datasets: [\n                {\n                    data: [\n                        800,\n                        1300,\n                        1050,\n                        1500,\n                        2000,\n                        1450,\n                        1800,\n                        1300,\n                        1600,\n                        2300,\n                        2000,\n                        2300,\n                        2450,\n                    ],\n                    borderColor: '#7477BF',\n                    backgroundColor: 'rgba(212, 214, 231, 0.46)',\n                    fill: true,\n                    lineTension: 0,\n                    pointRadius: 8,\n                    pointBackgroundColor: 'white',\n                },\n            ],\n        },\n        options: {\n            legend: {\n                display: false,\n            },\n            responsive: true,\n        },\n    },\n    barData = {\n        type: 'roundedBar',\n        data: {\n            labels: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n            datasets: [\n                {\n                    backgroundColor: '#4D4B72',\n                    data: [75, 105, 165, 125, 225, 198, 98],\n                },\n            ],\n        },\n        options: {\n            responsive: true,\n            legend: { display: false },\n            title: {\n                display: true,\n            },\n        },\n    },\n    doughnutData = {\n        type: 'doughnut',\n        data: {\n            labels: ['Phones', 'Tablets', 'Desktop'],\n            datasets: [\n                {\n                    backgroundColor: ['#77B988', '#68A6B1', '#4D4B72'],\n                    data: [25, 25, 75],\n                },\n            ],\n        },\n        options: {\n            responsive: true,\n            elements: {\n                arc: {\n                    borderWidth: 0,\n                },\n            },\n            legend: {\n                display: true,\n                position: 'right',\n                labels: {\n                    boxWidth: 20,\n                },\n            },\n        },\n    };","// Step Three (b): Style the charts to match the overall style of the dashboard.\n\n//    <!-- Step Three (b): Style the charts to match the overall style of the dashboard. -->\n//    <!-- Step Three (c): You will need to make up this data - you can see the mockup for sample data -->\n//    <!-- Step Three -->\n\n\n\n// Step Three (a): using chart.js create and include the information for the following chart widgets as shown in the mockup for the 1. web traffic\n\nvar rangedTrafficLine = document.querySelector('#rangedTraffic'),\n    \n    trafficDaily = document.querySelector('#trafficBar'),\n    trafficMobile = document.querySelector('#trafficPie'),\n    rangedTrafficChart = new Chart(rangedTrafficLine, hourlyData),\n    // Bar chart\n    dailyTrafficBarChart = new Chart(trafficDaily, barData),\n    mobileTrafficDoughnutChart = new Chart(trafficMobile, doughnutData);\n","// Add an \"autocomplete\" feature for the \"Search for User\" box, listing \n// names that match the searh term\n\nvar userElements = document.querySelectorAll('.members__name'),\n    searchBox = document.querySelector('.members__input'),\n    autocomplete = new autoComplete({\n        selector: '.members__input',\n        minChars: 2,\n        source: function(term, suggest) {\n            term = term.toLowerCase();\n            var userNames = [],\n                suggestions = [];\n            for (var i = 0; i < userElements.length; i++) {\n                userNames.push(userElements[i].textContent);\n            }\n            for (var j = 0; j < userNames.length; j++) {\n                if(~userNames[j].toLowerCase().indexOf(term)) {\n                    suggestions.push(userNames[j]);\n                    suggest(suggestions);\n                }\n            }\n        }\n    });\n\n","// Create a navigation similar to the one in the mockup when the Hours, Daily, Weekly and Monthly button is selected. Add functionality to the Hourly, Daily, Weekly and Monthly buttons so that a different line chart is displayed on click.\n\nvar timeOptions = document.querySelectorAll('.traffic__config li');\n\n// Load previous configuration from localStorage and set classNames accordingly\nif (localStorage.trafficIndex) {\n    var index = localStorage.trafficIndex;\n    for (var k = 0; k < timeOptions.length; k++) {\n        timeOptions[k].className = 'traffic__option';\n    }\n    timeOptions[index].className = 'traffic__option--active';\n}\n\nfor (var i = 0; i < timeOptions.length; i++) {\n    timeOptions[i].addEventListener('click', function(event) {\n        var optionNodes = Array.prototype.slice.call(timeOptions),\n            eventIndex = optionNodes.indexOf(event.target);\n        localStorage.setItem('trafficIndex', eventIndex.toString());\n        for (var j = 0; j < timeOptions.length; j++) {\n            // Resetting all of the classes for both the options and charts.\n            timeOptions[j].className = 'traffic__option';\n        }\n        // Setting the active chart and corresponding option classes.\n        event.target.className = 'traffic__option--active';\n\n        if (eventIndex === 0) {\n            rangedTrafficChart = new Chart(rangedTrafficLine, hourlyData);\n        } else if (eventIndex === 1) {\n            rangedTrafficChart = new Chart(rangedTrafficLine, weeklyData);\n        } else if (eventIndex === 2) {\n            rangedTrafficChart = new Chart(rangedTrafficLine, weeklyData);\n        } else if (eventIndex === 3) {\n            rangedTrafficChart = new Chart(rangedTrafficLine, monthlyData);\n        }\n    });\n}\n","// Step Two (a): Alert bar should be visible at the top but able to be\n// closed when clicking the X button \n\nvar alertParent = document.querySelector('.top'),\n    alert = document.querySelector('.top__alert'),\n    xIcon = document.querySelector('.icon--close'),\n    alertClosed = false;\n\n// Check localStorage for previously closed alert and adjust accordingly\nif(localStorage.alertClosed) {\n    if(localStorage.alertClosed === 'true') {\n        alertClosed = true;\n    }\n\n    if(alertClosed === true) {\n        alertParent.removeChild(alert);\n    }\n}\n\nxIcon.addEventListener('click', function() {\n    alertParent.removeChild(alert);\n    alertClosed = true;\n    localStorage.setItem('alertClosed', 'true');\n});","// Step Five (e): Use JS to display error messages if a user isn't selected\n// or the message field is empty\n\nvar searchErrorSpan = document.querySelector('#searchError'),\n    textAreaErrorSpan = document.querySelector('#textError'),\n    successMessageSpan = document.querySelector('#successMessage'),\n    submitButton = document.querySelector('.members__submit'),\n    messageBox = document.querySelector('.members__textarea');\n\nsubmitButton.addEventListener('click', function(event) {\n    if (searchBox.value.length > 0 && messageBox.value.length > 0) {\n        successMessageSpan.className = 'members__success-message--active';\n        successMessageSpan.textContent = 'Message Sent!';\n        searchBox.value = '';\n    } else if (searchBox.value.length === 0) {\n        searchErrorSpan.textContent = 'Please enter a name to search';\n        searchErrorSpan.className = 'members__search-error--active';\n        successMessageSpan.textContent = '';\n        successMessageSpan.classNamee = 'members__success-message';\n    } else {\n        searchBox.value = '';\n        searchErrorSpan.textContent = '';\n        searchErrorSpan.className = 'members__search-error';\n    }\n    if (messageBox.value.length === 0) {\n        textAreaErrorSpan.textContent = 'Please enter a message';\n        textAreaErrorSpan.className = 'members__text-error--active';\n    } else {\n        messageBox.value = '';\n        textAreaErrorSpan.textContent = '';\n        textAreaErrorSpan.className = 'members__text-error';\n    }\n\n    event.preventDefault();\n});\n","var alertMsgs = [\n        'Iboya Vat commented on YourApp\\'s SEO Tips',\n        'Aapo Niskanen liked the post Facebook\\'s Changes for 2018',\n        'Phillip Cox commented on Facebook\\'s Changes for 2018',\n        'Zilda Moreira posted YourApp\\'s SEO Tips'\n    ],\n    dropdownContent = document.querySelector('#dropdownContent'),\n    bell = document.querySelector('#notificationBell'),\n    notificationSignal = document.querySelector('#notificationSignal'),\n    alertStatus = true,\n    dropdownStatus = false;\n\n// Check localStorage for alertStatus and set accordingly\n\nif(localStorage.alertState) {\n    if(localStorage.alertState === 'false') {\n        alertStatus = false;\n    }\n    if (alertStatus === false) {\n        notificationSignal.style.display = 'none';\n    }\n}\n\nbell.addEventListener('click', function() {\n    if(dropdownStatus === false) {\n        dropdownContent.className = 'dropdown__content--active';\n        for (var i = 0; i < alertMsgs.length; i++) {\n            var item = document.createElement('span');\n            item.className = 'dropdown__item';\n            item.textContent = alertMsgs[i];\n            dropdownContent.appendChild(item);\n        }\n        notificationSignal.style.display = 'none';\n        dropdownStatus = true;\n    } else if(dropdownStatus === true) {\n        while (dropdownContent.firstChild) {\n            dropdownContent.className = 'dropdown__content';\n            dropdownContent.removeChild(dropdownContent.firstChild);\n        }\n        dropdownStatus = false;\n    }\n});\n\ndocument.addEventListener('click', function(event) {\n    if (dropdownStatus === true && event.target !== bell) {\n        while (dropdownContent.firstChild) {\n            dropdownContent.className = 'dropdown__content';\n            dropdownContent.removeChild(dropdownContent.firstChild);\n        }\n        dropdownStatus = false;\n        alertStatus = false;\n        localStorage.setItem('alertState', 'false');\n    }\n});\n\n\n","var emailSwitch = document.querySelector('#emailSwitch'),\n    profileSwitch = document.querySelector('#profileSwitch'),\n    timeZone = document.querySelector('#dropdownTimeZone'),\n    saveButton = document.querySelector('#saveButton'),\n    selectedZone = '',\n    emailStatus = false,\n    profileStatus = false;\n\n// Check localStorage and set values accordingly\n\nif(localStorage.emailStatus) {\n    var emailValue = localStorage.emailStatus;\n\n    if(emailValue === 'true') {\n        emailStatus = true;\n    } else {\n        emailStatus = false;\n    }\n\n    if(emailStatus === true) {\n        emailSwitch.checked = 'checked';\n    } else {\n        emailSwitch.checked = '';\n    }\n}\n\nif (localStorage.profileStatus) {\n    var profileValue = localStorage.profileStatus;\n\n    if (profileValue === 'true') {\n        profileStatus = true;\n    } else {\n        profileStatus = false;\n    }\n\n    if (profileStatus === true) {\n        profileSwitch.checked = 'checked';\n    } else {\n        profileSwitch.checked = '';\n    }\n}\n\nif(localStorage.timeZone) {\n    timeZone.value = localStorage.timeZone;\n}\n\nemailSwitch.addEventListener('click', function() {\n    emailStatus = !emailStatus;\n});\n\nprofileSwitch.addEventListener('click', function() {\n    profileStatus = !profileStatus;\n});\n\ntimeZone.addEventListener('change', function() {\n    selectedZone = timeZone.value;\n});\n\nsaveButton.addEventListener('click', function() {\n    localStorage.setItem('timeZone', selectedZone);\n    localStorage.setItem('profileStatus', profileStatus.toString());\n    localStorage.setItem('emailStatus', emailStatus.toString());\n})\n"]}